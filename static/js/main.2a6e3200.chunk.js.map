{"version":3,"sources":["components/ItemList.tsx","components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["ItemList","_ref","currentItemsToRender","_jsx","children","map","item","Pagination","total","perPage","currentPage","PageChange","currentItemsLength","length","currentPagesToPaginate","startIndex","endIndex","slice","i","push","changePage","shift","pageNumber","_jsxs","_Fragment","className","classNames","disabled","href","onClick","_item","active","concat","items","from","to","numbers","n","getNumbers","App","state","setState","useState","totalItems","Math","min","id","value","onChange","event","prevState","Number","target","htmlFor","async","console","log","pageChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a6e3200.chunk.js","sourcesContent":["interface Props {\n  currentItemsToRender: string[]\n}\n\nconst ItemList: React.FC<Props> = ({\n  currentItemsToRender,\n}) => {\n  return (\n    <div>\n      <ul>\n        {currentItemsToRender.map((item: string) => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n\nexport default ItemList;\n","import classNames from 'classnames';\nimport React from 'react';\nimport ItemList from '../ItemList';\n\ninterface PaginationProps {\n  total: string[];\n  perPage: number;\n  currentPage: number;\n  PageChange: (arg0: number) => {};\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage,\n  PageChange,\n}) => {\n  const currentItemsLength = total.length / perPage;\n  const currentPagesToPaginate = [];\n\n  const startIndex = (currentPage - 1) * perPage;\n  const endIndex = startIndex + perPage;\n  const currentItemsToRender = total.slice(startIndex, endIndex);\n\n  for (let i = 0; i < currentItemsLength; i += 1) {\n    currentPagesToPaginate.push(total[i]);\n  }\n\n  const changePage = (\n    shift: number | undefined,\n    pageNumber: number,\n  ) => {\n    if ((currentPage === 1 && shift === -1)\n    || (currentPage === currentPagesToPaginate.length && shift === 1)) {\n      return;\n    }\n\n    switch (shift) {\n      case -1:\n        PageChange(currentPage - 1);\n        break;\n      case 1:\n        PageChange(currentPage + 1);\n        break;\n      default:\n        PageChange(pageNumber);\n        break;\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames('page-item', { disabled: currentPage <= 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage < 2 ? 'true' : 'false'}\n            onClick={() => changePage(-1, 0)}\n          >\n            «\n          </a>\n        </li>\n        {currentPagesToPaginate.map((_item, i) => (\n          <li\n            key={_item}\n            className={classNames('page-item', {\n              active: currentPage === i + 1,\n            })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${i + 1}`}\n              onClick={() => changePage(0, i + 1)}\n            >\n              {i + 1}\n            </a>\n          </li>\n        ))}\n        <li className={classNames('page-item',\n          { disabled: currentPage === currentPagesToPaginate.length })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={\n              currentPage === currentPagesToPaginate.length ? 'true' : 'false'\n            }\n            onClick={() => changePage(1, 0)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ItemList currentItemsToRender={currentItemsToRender} />\n    </>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\ntype State = {\n  totalItems: string[];\n  currentPage: number;\n  perPage: number;\n};\n\nexport const App: React.FC = () => {\n  const [state, setState] = useState<State>({\n    totalItems: items,\n    currentPage: 1,\n    perPage: 5,\n  });\n\n  function pageChange(value: number) {\n    console.log(value);\n    setState((prevState) => ({\n      ...prevState,\n      currentPage: value,\n    }));\n  }\n\n  const startIndex = (state.currentPage - 1) * state.perPage + 1;\n  const endIndex = Math.min(startIndex + state.perPage - 1, state.totalItems.length);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${state.currentPage} (items ${startIndex} - ${endIndex} of ${state.totalItems.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={state.perPage}\n            onChange={(event) => {\n              setState((prevState) => ({\n                ...prevState,\n                currentPage: 1,\n                perPage: Number(event.target.value),\n              }));\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={state.totalItems}\n        perPage={state.perPage}\n        currentPage={state.currentPage}\n        PageChange={async (value) => pageChange(value)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers: number[] = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}